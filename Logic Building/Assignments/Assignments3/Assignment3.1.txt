Snippet 1:
public class InfiniteForLoop {
public static void main(String[] args) {
for (int i = 0; i < 10; i--) {
System.out.println(i);
}
}
}

Q Error to investigate: Why does this loop run infinitely? How should the loop control variable be adjusted?
A Loop runs infinitely because of decrement condition, it be fixed by change i-- to i++






Snippet 2:
public class IncorrectWhileCondition {
public static void main(String[] args) {
int count = 5;
while (count = 0) {
System.out.println(count);
count--;
}
}
}

Q Error to investigate: Why does the loop not execute as expected? What is the issue with the condition in the
`while` loop?
A The code wont compile because of syntax error, instead of assignment operator, comparision operator need to used.








Snippet 3:
public class DoWhileIncorrectCondition {
public static void main(String[] args) {
int num = 0;
do {
System.out.println(num);
num++;
} while (num > 0);

}
}

Q Error to investigate: Why does the loop only execute once? What is wrong with the loop condition in the `do-
while` loop?
A Loop runs infinitely.







Snippet 4:
public class OffByOneErrorForLoop {
public static void main(String[] args) {
for (int i = 1; i <= 10; i++) {
System.out.println(i);
}
// Expected: 10 iterations with numbers 1 to 10
// Actual: Prints numbers 1 to 10, but the task expected only 1 to 9
}
}

Q Error to investigate: What is the issue with the loop boundaries? How should the loop be adjusted to meet the
expected output?
A Can be fixed by changing condition inside loop from i<=10 to i<10.








Snippet 5:
public class WrongInitializationForLoop {
public static void main(String[] args) {
for (int i = 10; i >= 0; i++) {
System.out.println(i);
}
}
}

Q Error to investigate: Why does this loop not print numbers in the expected order? What is the problem with the
initialization and update statements in the `for` loop?
A Because of wrong use of comparision operator inside the for loop, loop will run infinitely, can be fixed by reversing comparision operator







Snippet 6:
public class MisplacedForLoopBody {
public static void main(String[] args) {
for (int i = 0; i < 5; i++)
System.out.println(i);
System.out.println("Done");
}
}
Q Error to investigate: Why does "Done" print only once, outside the loop? How should the loop body be enclosed to
include all statements within the loop?
A Done only print once because of not using curly braces for forloop, only  the statement after for loop is used if curly braces are not used.








Snippet 7:
public class UninitializedWhileLoop {
public static void main(String[] args) {
int count;

while (count < 10) {
System.out.println(count);
count++;
}
}
}

Q Error to investigate: Why does this code produce a compilation error? What needs to be done to initialize the loop
variable properly?
A Code will throw compilation error because count variable is not initialized










Snippet 8:
public class OffByOneDoWhileLoop {
public static void main(String[] args) {
int num = 1;
do {
System.out.println(num);
num--;
} while (num > 0);
}
}

Q Error to investigate: Why does this loop print unexpected numbers? What adjustments are needed to print the
numbers from 1 to 5?
A Loop only runs once, because condition become falls. To run the  programm from 1-5, we can change num-- to num++
and while condition to (num<6)











Snippet 9:
public class InfiniteForLoopUpdate {
public static void main(String[] args) {
for (int i = 0; i < 5; i += 2) {
System.out.println(i);
}
}
}

Q Error to investigate: Why does the loop print unexpected results or run infinitely? How should the loop update
expression be corrected?
A Loops runs perfectly fine.













Snippet 10:
public class IncorrectWhileLoopControl {
public static void main(String[] args) {
int num = 10;
while (num = 10) {
System.out.println(num);
num--;
}
}
}

Q Error to investigate: Why does the loop execute indefinitely? What is wrong with the loop condition?
A Loop has a syntax error during while condition, instead of assignment operator, comparision operator need to be used.










Snippet 11:
public class IncorrectLoopUpdate {
public static void main(String[] args) {
int i = 0;
while (i < 5) {
System.out.println(i);
i += 2; // Error: This may cause unexpected results in output
}
}
}

Q Error to investigate: What will be the output of this loop? How should the loop variable be updated to achieve the
desired result?
A Output of the loop will be 0,2,4. 










Snippet 12:
public class LoopVariableScope {
public static void main(String[] args) {
for (int i = 0; i < 5; i++) {
int x = i * 2;
}
System.out.println(x); // Error: 'x' is not accessible here
}
}

Q Error to investigate: Why does the variable 'x' cause a compilation error? How does scope
A int x is declared inside the for loop, we cant access it outside the for loop block.
















